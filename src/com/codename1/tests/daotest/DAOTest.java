package com.codename1.tests.daotest;


import ca.weblite.codename1.db.DAO;
import ca.weblite.codename1.db.DAOProvider;
import com.codename1.db.Database;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import java.util.Map;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class DAOTest {

    private Form current;
    private Resources theme;
    private static final int DB_VERSION = 1;
    private static final String DB_FILE = "liquibase.db";

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    class TarotImgDAO extends DAO {
        TarotImgDAO(DAOProvider provider) throws IOException {
            super("taro_img", provider);
        }

        @Override
        public Object newObject() {
            return new Object();
        }

        @Override
        public void unmap(Object t, Map map) {
            
        }

        @Override
        public void map(Object t, Map map) {
            
        }

        @Override
        public long getId(Object t) {
            return 1;
        }
    }
    
    private Database db;
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        try {
            db = Display.getInstance().openOrCreate(DB_FILE);

            DAOProvider provider = new DAOProvider(db, "/liquibase.sql", DB_VERSION);
            provider.set("tarot_img", new TarotImgDAO(provider));
        } catch (Throwable t) {
            Log.e(t);
        }
        
        Form hi = new Form("Hi World", BoxLayout.y());
        hi.add(new Label("Hi World"));
        hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
